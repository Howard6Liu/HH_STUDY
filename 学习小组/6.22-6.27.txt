【1-1】
1、Java从1.5开始，更新的版本变为x.0，而不是1.x
2、Java应用中，有75%都是基于Java 8
3、Java更新幅度最大的两个版本：Java5、Java 8
4、Sun公司：斯坦福网络

【1-2】
1、10进制转2进制：辗转相除法
2、计算器的程序员模式，可以实现各种进制间的相互转换

【1-3】
1、计算机存储文件的最小单位：字节
2、服务器的数据量级一般是PB、EB

【1-4】
1、MS-DOS（Disk Operating System）

【1-5】
1、 win没有根目录"/"
2、cmd：cd \ 可以直接返回当前目录的根目录盘符

【1-6】
1、JVM是特定于OS的

【1-7】
1、JRE：包含JVM和运行时需要的核心类库
2、JDK：Java程序开发工具包，包含JRE和开发工具（如编译器）

【1-8】
1、独立的JRE可以不用安装

【1-9】
无

【2-10】
1、java.exe：解释器（参与字节码文件的运行）
2、javac.exe：编译器
3、编译器生成的文件：字节码文件（xxx.class）

【2-11】
1、在cmd里运行字节码文件时，不需要键入后缀名
2、Notepad++在首选项中，设置：
-默认语言：Java、
-编码：ANSI
可实现对Java程序拼写错误的检查

【2-12】
无

【2-13】
无

【3-14】
1、关键字都是小写的

【3-15】
1、类名规范：大驼峰
2、变量名 / 方法名规范：小驼峰

【4-16】
无

【4-17】
1、输出打印：两个单引号中间只能有1个字符
2、空常量（null）不能直接用来打印输出

【4-18】
无

【4-19】
无

【4-20】
1、long类型变量的常量赋值/初始化，加上L
2、float类型变量的常量赋值/初始化，加上F
3、char类型变量可以存放1个中文字符

【4-21】
1、使用byte、short类型的变量，右侧的数据值不能超过左侧类型的范围
2、没有进行赋值的变量，不能直接使用

【5-1、5-2】
1、数据转换：
-自动类型转换（隐式）：自动完成；数据范围必须从小转换到大
-强制类型转换：数据范围：从大转换到小
-》short res=a+b;//a,b都是short类型，编译器将会报错，必须进行强制转换
2、float的数据范围 > long

【5-3】
1、强制类型转换：不推荐使用，有可能发生精度损失、数据溢出
2、byte、short、char在运算的时候，都会被首先提升为int类型
3、boolean类型不能发生数据类型转换

【5-4】
1、ASCII码表只包含了128个字符的对应关系
（American Standard Code for Information Interchange）
2、Unicode码表：万国表，开头和ASCII一样，从128开始包含了更多字符；甚至包括了Emoji表情
（Emoji表情是一种文字）

【6-5】
1、一旦运算符中有不同类型的数据，那么结果将会是数据类型范围大的那种

【6-6 】
1、String + int = String

【6-7】
无

【6-8】
 1、赋值运算符隐含了强制类型转换

【6-9】
无

【6-10】
无

【6-11】
1、三元运算符的结果必须都符合数据类型的要求
2、三元运算符的结果必须被使用
 
【7-12】
无

【7-13】
无

【7-14】
无

【8-15】
1、JDK9推出了JShell工具，适合写很简单的代码

【8-16】
1、JDK9（才有？）：对于byte、short、char类型，如果赋值的数值没有超过其范围，javac将自动进行强制类型转换
2、常量优化： 在变量赋值时，若右侧表达式全是常量，则javac会直接计算得到结果
byte（8位）：-128-127
short（16位）：-32768-32767
char（16位）：0-65535

【9-*】
1、switch语句的判断对象类型必须是：
-基本数据类型：byte、short、char、int
-引用数据类型：String、enum

【10-*】
无

